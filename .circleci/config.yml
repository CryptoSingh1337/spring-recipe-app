# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0

    working_directory: ~/spring-recipe-app

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      # Checkout the code as the first step.
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - spring-recipe-app-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependecies-

      - save_cache:
          paths:
            - ~/.m2
          key: spring-recipe-app-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      # Then run your tests!
      - run: mvn integration-test

      - store_test_results:
          path: target/surefire-reports

      - run:
          name: Send to codecov
          command: bash <(curl -s https://codecov.io/bash)

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  sample: 
    jobs:
      - build-and-test
